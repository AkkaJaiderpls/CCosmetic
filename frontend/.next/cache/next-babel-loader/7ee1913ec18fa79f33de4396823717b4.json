{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport SectionTitleOne from \"../SectionTitle/SectionTitleOne\";\nexport default function CTAOne() {\n  const {\n    0: bannerImage,\n    1: setBannerImage\n  } = useState('');\n  const {\n    0: services,\n    1: setServices\n  } = useState([]);\n  useEffect(() => {\n    async function fetchBannerImage() {\n      try {\n        const response = await fetch('http://localhost:8090/api/collections/banner/records');\n        const data = await response.json();\n        if (data.items && data.items.length > 0) {\n          const imageUrl = `http://localhost:8090/api/files/${data.items[0].collectionId}/${data.items[0].id}/${data.items[0].image_1920x1080}`;\n          setBannerImage(imageUrl);\n        }\n      } catch (error) {\n        console.error('Error fetching banner data:', error);\n      }\n    }\n    async function fetchServices() {\n      try {\n        const response = await fetch('http://127.0.0.1:8090/api/collections/services/records');\n        const data = await response.json();\n        if (data.items) {\n          setServices(data.items);\n        }\n      } catch (error) {\n        console.error('Error fetching services:', error);\n      }\n    }\n    fetchServices();\n    fetchBannerImage();\n  }, []);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const onSubmit = async data => {\n    try {\n      const response = await fetch('http://127.0.0.1:8090/api/collections/meetings/records', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: data.name,\n          phone: data.phone,\n          service: data.service\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const responseData = await response.json();\n      window.location.reload();\n    } catch (error) {\n      console.error('Error al enviar el formulario:', error);\n    }\n  };\n  return __jsx(\"div\", {\n    className: \"cta -style-1\",\n    style: {\n      backgroundImage: `url(\"${bannerImage}\")`\n    }\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12 col-md-6 mx-auto\"\n  }, __jsx(\"div\", {\n    className: \"cta__form\"\n  }, __jsx(SectionTitleOne, {\n    align: \"center\",\n    spaceBottom: \"1.875em\"\n  }, \"AGENDA UNA CITA\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"cta__form__detail\"\n  }, __jsx(\"div\", {\n    className: \"input-validator\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"NOMBRE\",\n    name: \"name\",\n    ref: register({\n      required: true\n    })\n  }), errors.name && __jsx(\"span\", {\n    className: \"input-error\"\n  }, \"Por favor, proporcione un nombre v\\xE1lido.\")), __jsx(\"div\", {\n    className: \"input-validator\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"TEL\\xC9FONO\",\n    name: \"phone\",\n    ref: register({\n      required: true\n    })\n  }), errors.phone && __jsx(\"span\", {\n    className: \"input-error\"\n  }, \"Por favor, proporcione un tel\\xE9fono v\\xE1lido.\")), __jsx(\"div\", {\n    className: \"input-validator\"\n  }, __jsx(\"select\", {\n    name: \"service\",\n    ref: register({\n      required: true\n    }),\n    className: \"customed-select\",\n    defaultValue: \"\"\n  }, __jsx(\"option\", {\n    value: \"\",\n    hidden: true\n  }, \"ELEGIR UN SERVICIO\"), services.map((service, index) => __jsx(\"option\", {\n    key: index,\n    value: service.name\n  }, service.name))), errors.service && __jsx(\"span\", {\n    className: \"input-error\"\n  }, \"Por favor, elija un servicio.\")), __jsx(\"button\", {\n    className: \"btn -light-red\"\n  }, \"AGENDAR\")))))));\n}","map":null,"metadata":{},"sourceType":"module"}