{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport LayoutOne from '../../components/Layout/LayoutOne';\nimport SliderTwo from '../../components/Sections/Slider/SliderTwo';\nimport IntroductionOne from '../../components/Sections/Introduction/IntroductionOne';\nimport IntroductionTwo from '../../components/Sections/Introduction/IntroductionTwo';\nimport ProductSlideOne from '../../components/Sections/ProductThumb/ProductSlide/ProductSlideOne';\nimport TestimonialOne from '../../components/Sections/Testimonial/TestimonialOne';\nimport TeamOne from '../../components/Sections/Team/TeamOne';\nimport CTAOne from '../../components/Sections/CallToAction/CTAOne';\nexport default function Homepage1() {\n  const {\n    0: sliderData,\n    1: setSliderData\n  } = useState([]);\n  const {\n    0: introductionData,\n    1: setIntroductionData\n  } = useState({});\n  const {\n    0: introductionTwoData,\n    1: setIntroductionTwoData\n  } = useState([]);\n  const {\n    0: productData,\n    1: setProductData\n  } = useState([]);\n  const {\n    0: testimonialData,\n    1: setTestimonialData\n  } = useState([]);\n  const {\n    0: teamData,\n    1: setTeamData\n  } = useState([]);\n  useEffect(() => {\n    async function fetchSliderData() {\n      try {\n        const response = await fetch('http://127.0.0.1:8090/api/collections/slider/records');\n        const data = await response.json();\n        const formattedData = data.items.map(item => ({\n          title: {\n            main: item.title\n          },\n          subTitle: item.subTitle,\n          image: `http://127.0.0.1:8090/api/files/${item.collectionId}/${item.id}/${item.image_1920x550}`,\n          btn: {\n            content: 'VISUALIZAR',\n            color: 'red'\n          },\n          animationClass: {\n            title: 'slider-one-title',\n            subtitle: 'slider-one-subtitle',\n            button: 'slider-one-button'\n          }\n        }));\n        setSliderData(formattedData);\n      } catch (error) {\n        console.error('Error fetching slider data:', error);\n      }\n    }\n    async function fetchIntroductionData() {\n      try {\n        const response = await fetch('http://localhost:8090/api/collections/introduction/records');\n        const data = await response.json();\n        if (data && data.items && data.items.length > 0) {\n          const item = data.items[0];\n          const formattedData = {\n            subTitle: {\n              main: item.subTitleMain,\n              span: item.subTitleSpan\n            },\n            title: {\n              main: item.titleMain,\n              span: item.titleSpan\n            },\n            description: item.description,\n            btn: {\n              content: 'VISUALIZAR',\n              color: 'white'\n            },\n            image1: `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.image_390x455}`,\n            image2: `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.image_370x440}`\n          };\n          setIntroductionData(formattedData);\n        }\n      } catch (error) {\n        console.error('Error fetching introduction data:', error);\n      }\n    }\n    async function fetchIntroductionTwoData() {\n      try {\n        const response = await fetch('http://localhost:8090/api/collections/services/records');\n        const data = await response.json();\n        const formattedData = data.items.map(item => ({\n          name: item.name,\n          videoPoster: `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.image_960x500}`,\n          videoSrc: item.videoSrc\n        }));\n        setIntroductionTwoData(formattedData);\n      } catch (error) {\n        console.error('Error fetching introduction two data:', error);\n      }\n    }\n    async function fetchProductData() {\n      try {\n        const response = await fetch('http://localhost:8090/api/collections/products/records');\n        const data = await response.json();\n        const formattedData = data.items.map(item => ({\n          iid: item.id,\n          category: item.category,\n          name: item.name,\n          rate: item.rate,\n          price: item.price,\n          isNew: item.new,\n          brand: item.brand,\n          code: item.code,\n          point: item.point,\n          quantity: item.quantity,\n          colorVariations: [{\n            color: \"red\",\n            colorCode: \"#8B0000\",\n            image: \"/assets/images/product/color1.png\"\n          }, {\n            color: \"blue\",\n            colorCode: \"#4169E1\",\n            image: \"/assets/images/product/color2.png\"\n          }],\n          thumbImage: item.thumbImage_270x345 ? `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.thumbImage_270x345}` : null,\n          images: item.image_270x345.map(img => `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${img}`),\n          description: item.description,\n          slug: item.slug\n        }));\n        setProductData(formattedData);\n      } catch (error) {\n        console.error('Error fetching product data:', error);\n      }\n    }\n    async function fetchTestimonialData() {\n      try {\n        const response = await fetch('http://localhost:8090/api/collections/testimonials/records');\n        const data = await response.json();\n        const formattedData = data.items.map(item => ({\n          id: item.id,\n          name: item.name,\n          city: item.city,\n          review: item.review,\n          rate: item.rate,\n          image: `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.image_130x130}`\n        }));\n        setTestimonialData(formattedData);\n      } catch (error) {\n        console.error('Error fetching testimonial data:', error);\n      }\n    }\n    async function fetchTeamData() {\n      try {\n        const response = await fetch('http://localhost:8090/api/collections/team/records');\n        const data = await response.json();\n        const formattedData = data.items.map(item => ({\n          id: item.id,\n          name: item.name,\n          position: item.position,\n          quote: item.quote,\n          image: `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.image_196x209}`\n        }));\n        setTeamData(formattedData);\n      } catch (error) {\n        console.error('Error fetching team data:', error);\n      }\n    }\n    fetchTeamData();\n    fetchSliderData();\n    fetchIntroductionData();\n    fetchIntroductionTwoData();\n    fetchProductData();\n    fetchTestimonialData();\n  }, []);\n  return __jsx(LayoutOne, {\n    title: \"Homepage 1\",\n    className: \"-style-1\"\n  }, __jsx(SliderTwo, {\n    data: sliderData,\n    className: \"-style-1\",\n    showDots: true\n  }), introductionData.subTitle && __jsx(IntroductionOne, {\n    data: introductionData\n  }), __jsx(IntroductionTwo, {\n    data: introductionTwoData\n  }), __jsx(ProductSlideOne, {\n    data: productData\n  }), __jsx(TestimonialOne, {\n    data: testimonialData\n  }), __jsx(TeamOne, {\n    data: teamData\n  }), __jsx(CTAOne, null));\n}","map":null,"metadata":{},"sourceType":"module"}