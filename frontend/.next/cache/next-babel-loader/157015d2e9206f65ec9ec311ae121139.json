{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nexport const PrevArrow = _ref => {\n  let {\n      currentSlide,\n      slideCount\n    } = _ref,\n    arrowProps = _objectWithoutProperties(_ref, [\"currentSlide\", \"slideCount\"]);\n  return __jsx(\"a\", _extends({}, arrowProps, {\n    href: \"#\"\n  }), __jsx(\"i\", {\n    className: \"far fa-angle-left\"\n  }));\n};\nexport const NextArrow = _ref2 => {\n  let {\n      currentSlide,\n      slideCount\n    } = _ref2,\n    arrowProps = _objectWithoutProperties(_ref2, [\"currentSlide\", \"slideCount\"]);\n  return __jsx(\"a\", _extends({}, arrowProps, {\n    href: \"#\"\n  }), __jsx(\"i\", {\n    className: \"far fa-angle-right\"\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}