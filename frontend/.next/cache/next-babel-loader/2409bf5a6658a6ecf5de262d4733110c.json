{"ast":null,"code":"var _jsxFileName = \"/home/rlsxsuredials/Downloads/Test/CCosmetic-master/frontend/src/pages/shop/fullwidth-4col.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport Paginator from \"react-hooks-paginator\";\nimport { getProductBySort } from \"../../common/productSelect\";\nimport { Breadcrumb, BreadcrumbItem } from \"../../components/Other/Breadcrumb\";\nimport LayoutFour from \"../../components/Layout/LayoutFour\";\nimport ShopProducts from \"../../components/Shop/ShopProducts\";\nimport ShopHeader from \"../../components/Shop/ShopHeader\";\nimport InstagramTwo from \"../../components/Sections/Instagram/InstagramTwo\";\nexport default function ShopFullwidth() {\n  const pageLimit = 12;\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(0);\n  const {\n    0: currentView,\n    1: setCurrentView\n  } = useState();\n  const {\n    0: currentSort,\n    1: setCurrentSort\n  } = useState();\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState([]);\n  const {\n    0: totalRecords,\n    1: setTotalRecords\n  } = useState(0);\n  useEffect(() => {\n    async function fetchProductData() {\n      try {\n        const response = await fetch('http://localhost:8090/api/collections/products/records');\n        const data = await response.json();\n        setTotalRecords(data.totalItems);\n        let formattedData = data.items.map(item => {\n          const thumbImageUrl = item.thumbImage_270x345 ? `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.thumbImage_270x345}` : undefined;\n          const imagesArray = item.image_270x345 && Array.isArray(item.image_270x345) ? item.image_270x345.map(img => `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${img}`) : [];\n          return {\n            id: item.id,\n            category: item.category,\n            name: item.name,\n            rate: item.rate,\n            price: item.price,\n            new: item.new,\n            brand: item.brand,\n            code: item.code,\n            point: item.point,\n            quantity: item.quantity,\n            colorVariations: [{\n              color: \"red\",\n              colorCode: \"#8B0000\",\n              image: \"/assets/images/product/color1.png\"\n            }, {\n              color: \"blue\",\n              colorCode: \"#4169E1\",\n              image: \"/assets/images/product/color2.png\"\n            }],\n            thumbImage: thumbImageUrl,\n            images: imagesArray,\n            description: item.description,\n            slug: item.slug\n          };\n        });\n        let sortedProduct = getProductBySort(formattedData, currentSort);\n        setCurrentData(sortedProduct.slice(offset, offset + pageLimit));\n      } catch (error) {\n        console.error('Error fetching product data:', error);\n      }\n    }\n    fetchProductData();\n  }, [offset, currentSort]);\n  return __jsx(LayoutFour, {\n    title: \"TIENDA\",\n    container: \"wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(Breadcrumb, {\n    title: \"TIENDA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(BreadcrumbItem, {\n    name: \"INICIO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), __jsx(BreadcrumbItem, {\n    name: \"TIENDA\",\n    current: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"shop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container-full-half\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(ShopHeader, {\n    view: currentView,\n    getCurrentSort: setCurrentSort,\n    getCurrentView: view => setCurrentView(view),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), __jsx(ShopProducts, {\n    gridColClass: \"col-12 col-sm-6 col-md-4 col-lg-3\",\n    listColClass: \"col-12 col-lg-6\",\n    view: currentView,\n    data: currentData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), __jsx(Paginator, {\n    pageContainerClass: \"paginator\",\n    totalRecords: totalRecords,\n    pageLimit: pageLimit,\n    pageNeighbours: 2,\n    setOffset: setOffset,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["useState","useEffect","Paginator","getProductBySort","Breadcrumb","BreadcrumbItem","LayoutFour","ShopProducts","ShopHeader","InstagramTwo","ShopFullwidth","pageLimit","offset","setOffset","currentView","setCurrentView","currentSort","setCurrentSort","currentPage","setCurrentPage","currentData","setCurrentData","totalRecords","setTotalRecords","fetchProductData","response","fetch","data","json","totalItems","formattedData","items","map","item","thumbImageUrl","thumbImage_270x345","collectionId","id","undefined","imagesArray","image_270x345","Array","isArray","img","category","name","rate","price","new","brand","code","point","quantity","colorVariations","color","colorCode","image","thumbImage","images","description","slug","sortedProduct","slice","error","console","__jsx","title","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","current","className","view","getCurrentSort","getCurrentView","gridColClass","listColClass","pageContainerClass","pageNeighbours"],"sources":["/home/rlsxsuredials/Downloads/Test/CCosmetic-master/frontend/src/pages/shop/fullwidth-4col.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\";\r\n\r\nimport { getProductBySort } from \"../../common/productSelect\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"../../components/Other/Breadcrumb\";\r\nimport LayoutFour from \"../../components/Layout/LayoutFour\";\r\nimport ShopProducts from \"../../components/Shop/ShopProducts\";\r\nimport ShopHeader from \"../../components/Shop/ShopHeader\";\r\nimport InstagramTwo from \"../../components/Sections/Instagram/InstagramTwo\";\r\n\r\nexport default function ShopFullwidth() {\r\n  const pageLimit = 12;\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentView, setCurrentView] = useState();\r\n  const [currentSort, setCurrentSort] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n\r\n  useEffect(() => {\r\n    async function fetchProductData() {\r\n      try {\r\n        const response = await fetch('http://localhost:8090/api/collections/products/records');\r\n        const data = await response.json();\r\n        setTotalRecords(data.totalItems);\r\n        let formattedData = data.items.map(item => {\r\n          const thumbImageUrl = item.thumbImage_270x345 ? \r\n            `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.thumbImage_270x345}` : \r\n            undefined;\r\n          const imagesArray = item.image_270x345 && Array.isArray(item.image_270x345) ? \r\n            item.image_270x345.map(img => \r\n              `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${img}`\r\n            ) : [];\r\n\r\n          return {\r\n            id: item.id,\r\n            category: item.category,\r\n            name: item.name,\r\n            rate: item.rate,\r\n            price: item.price,\r\n            new: item.new,\r\n            brand: item.brand,\r\n            code: item.code,\r\n            point: item.point,\r\n            quantity: item.quantity,\r\n            colorVariations: [\r\n              {\r\n                color: \"red\",\r\n                colorCode: \"#8B0000\",\r\n                image: \"/assets/images/product/color1.png\" \r\n              },\r\n              {\r\n                color: \"blue\",\r\n                colorCode: \"#4169E1\",\r\n                image: \"/assets/images/product/color2.png\"\r\n              }],\r\n            thumbImage: thumbImageUrl,\r\n            images: imagesArray,\r\n            description: item.description,\r\n            slug: item.slug\r\n          };\r\n        });\r\n        let sortedProduct = getProductBySort(formattedData, currentSort);\r\n        setCurrentData(sortedProduct.slice(offset, offset + pageLimit));\r\n      } catch (error) {\r\n        console.error('Error fetching product data:', error);\r\n      }\r\n    }\r\n\r\n    fetchProductData();\r\n  }, [offset, currentSort]);\r\n  return (\r\n    <LayoutFour title=\"TIENDA\" container=\"wide\">\r\n      <Breadcrumb title=\"TIENDA\">\r\n        <BreadcrumbItem name=\"INICIO\" />\r\n        <BreadcrumbItem name=\"TIENDA\" current />\r\n      </Breadcrumb>\r\n      <div className=\"shop\">\r\n        <div className=\"container-full-half\">\r\n          <ShopHeader\r\n            view={currentView}\r\n            getCurrentSort={setCurrentSort}\r\n            getCurrentView={(view) => setCurrentView(view)}\r\n          />\r\n          <ShopProducts\r\n            gridColClass=\"col-12 col-sm-6 col-md-4 col-lg-3\"\r\n            listColClass=\"col-12 col-lg-6\"\r\n            view={currentView}\r\n            data={currentData}\r\n          />\r\n          <Paginator\r\n            pageContainerClass=\"paginator\"\r\n            totalRecords={totalRecords}\r\n            pageLimit={pageLimit}\r\n            pageNeighbours={2}\r\n            setOffset={setOffset}\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </LayoutFour>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}