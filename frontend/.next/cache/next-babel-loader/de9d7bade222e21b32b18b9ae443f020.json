{"ast":null,"code":"//get product\nexport const getProducts = (products, category, type, limit) => {\n  category = category && category.toLowerCase() === \"all\" ? \"\" : category;\n  const finalProducts = category ? products.filter(product => product.category.toLowerCase() === category.toLowerCase()) : products;\n  if (type && type === \"new\") {\n    const newProducts = finalProducts.filter(product => product.new);\n    return newProducts.slice(0, limit ? limit : newProducts.length);\n  } else {\n    return finalProducts && finalProducts.slice(0, limit ? limit : finalProducts.length);\n  }\n};\n\n//get product by slug\nexport const getProductBySlug = (products, slug) => {\n  return slug ? products.find(product => product.slug.toLowerCase() === slug.toLowerCase()) : null;\n};\n\n//sort product\nexport const getProductBySort = (products, type, limit) => {\n  function sortWithCondition(arr, value, reverse = false) {\n    let num = reverse ? -1 : 1;\n    return products.slice(0, limit ? limit : products.length).sort((a, b) => {\n      if (a[value] < b[value]) {\n        return -1 * num;\n      }\n      if (a[value] > b[value]) {\n        return 1 * num;\n      }\n      return 0;\n    });\n  }\n  if (!type || type === \"default\") {\n    return products;\n  } else if (type === \"az\") {\n    return sortWithCondition(products, \"name\");\n  } else if (type === \"za\") {\n    return sortWithCondition(products, \"name\", true);\n  } else if (type === \"lowToHigh\") {\n    return sortWithCondition(products, \"price\");\n  } else if (type === \"highToLow\") {\n    return sortWithCondition(products, \"price\", true);\n  } else {\n    return products.slice(0, limit ? limit : products.length);\n  }\n};\n\n//get product by price\nexport const getProductByPrice = (products, from, to, limit) => {\n  if (from && !to) {\n    return products.filter(p => p.price > from);\n  } else if (!from && to) {\n    return products.filter(p => p.price < to);\n  } else if (!from && !to) {\n    return products;\n  } else {\n    return products.filter(p => p.price > from && p.price < to);\n  }\n};\n\n//get product by brand\nexport const getProductByBrand = (products, brand) => {\n  return brand ? products.filter(p => p.brand.toLowerCase() === brand.toLowerCase()) : products;\n};\n\n//get product by filter\nexport const getProductbyFilter = (products, sortType, category, from, to, brand, limit) => {\n  let sortedProduct;\n  if (category) {\n    let productCategory = getProducts(products, category);\n    if (to && !brand) {\n      let productPrice = getProductByPrice(productCategory, from, to);\n      sortedProduct = getProductBySort(productPrice, sortType);\n    } else if (!to && brand) {\n      let productBrand = getProductByBrand(productCategory, brand);\n      sortedProduct = getProductBySort(productBrand, sortType);\n    } else if (to && brand) {\n      let productBrand = getProductByBrand(productCategory, brand);\n      let productPrice = getProductByPrice(productCategory, from, to);\n      let commonProducts = productBrand.filter(o1 => productPrice.some(o2 => o1.id === o2.id));\n      sortedProduct = getProductBySort(commonProducts, sortType);\n    } else {\n      sortedProduct = getProductBySort(productCategory, sortType);\n    }\n  } else {\n    sortedProduct = getProductBySort(products, sortType);\n  }\n  return sortedProduct.slice(0, limit || products.length);\n};","map":{"version":3,"names":["getProducts","products","category","type","limit","toLowerCase","finalProducts","filter","product","newProducts","new","slice","length","getProductBySlug","slug","find","getProductBySort","sortWithCondition","arr","value","reverse","num","sort","a","b","getProductByPrice","from","to","p","price","getProductByBrand","brand","getProductbyFilter","sortType","sortedProduct","productCategory","productPrice","productBrand","commonProducts","o1","some","o2","id"],"sources":["/home/rlsxsuredials/Downloads/Test/CCosmetic-master/frontend/src/common/productSelect.js"],"sourcesContent":["//get product\r\nexport const getProducts = (products, category, type, limit) => {\r\n  category = category && category.toLowerCase() === \"all\" ? \"\" : category;\r\n  const finalProducts = category\r\n    ? products.filter(\r\n        (product) => product.category.toLowerCase() === category.toLowerCase()\r\n      )\r\n    : products;\r\n  if (type && type === \"new\") {\r\n    const newProducts = finalProducts.filter((product) => product.new);\r\n    return newProducts.slice(0, limit ? limit : newProducts.length);\r\n  } else {\r\n    return (\r\n      finalProducts &&\r\n      finalProducts.slice(0, limit ? limit : finalProducts.length)\r\n    );\r\n  }\r\n};\r\n\r\n//get product by slug\r\nexport const getProductBySlug = (products, slug) => {\r\n  return slug\r\n    ? products.find(\r\n        (product) => product.slug.toLowerCase() === slug.toLowerCase()\r\n      )\r\n    : null;\r\n};\r\n\r\n//sort product\r\nexport const getProductBySort = (products, type, limit) => {\r\n  function sortWithCondition(arr, value, reverse = false) {\r\n    let num = reverse ? -1 : 1;\r\n    return products.slice(0, limit ? limit : products.length).sort((a, b) => {\r\n      if (a[value] < b[value]) {\r\n        return -1 * num;\r\n      }\r\n      if (a[value] > b[value]) {\r\n        return 1 * num;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n  if (!type || type === \"default\") {\r\n    return products;\r\n  } else if (type === \"az\") {\r\n    return sortWithCondition(products, \"name\");\r\n  } else if (type === \"za\") {\r\n    return sortWithCondition(products, \"name\", true);\r\n  } else if (type === \"lowToHigh\") {\r\n    return sortWithCondition(products, \"price\");\r\n  } else if (type === \"highToLow\") {\r\n    return sortWithCondition(products, \"price\", true);\r\n  } else {\r\n    return products.slice(0, limit ? limit : products.length);\r\n  }\r\n};\r\n\r\n//get product by price\r\nexport const getProductByPrice = (products, from, to, limit) => {\r\n  if (from && !to) {\r\n    return products.filter((p) => p.price > from);\r\n  } else if (!from && to) {\r\n    return products.filter((p) => p.price < to);\r\n  } else if (!from && !to) {\r\n    return products;\r\n  } else {\r\n    return products.filter((p) => p.price > from && p.price < to);\r\n  }\r\n};\r\n\r\n//get product by brand\r\nexport const getProductByBrand = (products, brand) => {\r\n  return brand\r\n    ? products.filter((p) => p.brand.toLowerCase() === brand.toLowerCase())\r\n    : products;\r\n};\r\n\r\n//get product by filter\r\nexport const getProductbyFilter = (\r\n  products,\r\n  sortType,\r\n  category,\r\n  from,\r\n  to,\r\n  brand,\r\n  limit\r\n) => {\r\n  let sortedProduct;\r\n  if (category) {\r\n    let productCategory = getProducts(products, category);\r\n    if (to && !brand) {\r\n      let productPrice = getProductByPrice(productCategory, from, to);\r\n      sortedProduct = getProductBySort(productPrice, sortType);\r\n    } else if (!to && brand) {\r\n      let productBrand = getProductByBrand(productCategory, brand);\r\n      sortedProduct = getProductBySort(productBrand, sortType);\r\n    } else if (to && brand) {\r\n      let productBrand = getProductByBrand(productCategory, brand);\r\n      let productPrice = getProductByPrice(productCategory, from, to);\r\n      let commonProducts = productBrand.filter((o1) =>\r\n        productPrice.some((o2) => o1.id === o2.id)\r\n      );\r\n      sortedProduct = getProductBySort(commonProducts, sortType);\r\n    } else {\r\n      sortedProduct = getProductBySort(productCategory, sortType);\r\n    }\r\n  } else {\r\n    sortedProduct = getProductBySort(products, sortType);\r\n  }\r\n  return sortedProduct.slice(0, limit || products.length);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}