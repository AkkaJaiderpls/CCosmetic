{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport Paginator from \"react-hooks-paginator\";\nimport { getProductBySort } from \"../../common/productSelect\";\nimport { Breadcrumb, BreadcrumbItem } from \"../../components/Other/Breadcrumb\";\nimport LayoutFour from \"../../components/Layout/LayoutFour\";\nimport ShopProducts from \"../../components/Shop/ShopProducts\";\nimport ShopHeader from \"../../components/Shop/ShopHeader\";\nimport InstagramTwo from \"../../components/Sections/Instagram/InstagramTwo\";\nexport default function ShopFullwidth() {\n  const pageLimit = 12;\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(0);\n  const {\n    0: currentView,\n    1: setCurrentView\n  } = useState();\n  const {\n    0: currentSort,\n    1: setCurrentSort\n  } = useState();\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState([]);\n  const {\n    0: totalRecords,\n    1: setTotalRecords\n  } = useState(0);\n  useEffect(() => {\n    async function fetchProductData() {\n      try {\n        const response = await fetch('http://localhost:8090/api/collections/products/records');\n        const data = await response.json();\n        setTotalRecords(data.totalItems);\n        let formattedData = data.items.map(item => {\n          // Manejo de thumbImage y images\n          const thumbImageUrl = item.thumbImage_270x345 ? `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.thumbImage_270x345}` : undefined;\n          const imagesArray = item.image_270x345 && Array.isArray(item.image_270x345) ? item.image_270x345.map(img => `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${img}`) : [];\n          return {\n            id: item.id,\n            category: item.category,\n            name: item.name,\n            rate: item.rate,\n            price: item.price,\n            new: item.new,\n            brand: item.brand,\n            code: item.code,\n            point: item.point,\n            quantity: item.quantity,\n            colorVariations: [{\n              color: \"red\",\n              colorCode: \"#8B0000\",\n              image: \"/assets/images/product/color1.png\"\n            }, {\n              color: \"blue\",\n              colorCode: \"#4169E1\",\n              image: \"/assets/images/product/color2.png\"\n            }],\n            thumbImage: thumbImageUrl,\n            images: imagesArray,\n            description: item.description,\n            slug: item.slug\n          };\n        });\n        let sortedProduct = getProductBySort(formattedData, currentSort);\n        setCurrentData(sortedProduct.slice(offset, offset + pageLimit));\n      } catch (error) {\n        console.error('Error fetching product data:', error);\n      }\n    }\n    fetchProductData();\n  }, [offset, currentSort]);\n  return __jsx(LayoutFour, {\n    title: \"Shop Fullwidth 4 columns\",\n    container: \"wide\"\n  }, __jsx(Breadcrumb, {\n    title: \"TIENDA\"\n  }, __jsx(BreadcrumbItem, {\n    name: \"INICIO\"\n  }), __jsx(BreadcrumbItem, {\n    name: \"TIENDA\",\n    current: true\n  })), __jsx(\"div\", {\n    className: \"shop\"\n  }, __jsx(\"div\", {\n    className: \"container-full-half\"\n  }, __jsx(ShopHeader, {\n    view: currentView,\n    getCurrentSort: setCurrentSort,\n    getCurrentView: view => setCurrentView(view)\n  }), __jsx(ShopProducts, {\n    gridColClass: \"col-12 col-sm-6 col-md-4 col-lg-3\",\n    listColClass: \"col-12 col-lg-6\",\n    view: currentView,\n    data: currentData\n  }), __jsx(Paginator, {\n    pageContainerClass: \"paginator\",\n    totalRecords: totalRecords,\n    pageLimit: pageLimit,\n    pageNeighbours: 2,\n    setOffset: setOffset,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage\n  }))), __jsx(InstagramTwo, null));\n}","map":null,"metadata":{},"sourceType":"module"}