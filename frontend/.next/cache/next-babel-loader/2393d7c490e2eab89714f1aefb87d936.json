{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CART } from \"../variables\";\nvar initialState = [];\nexport default function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var cartItem = state.find(function (item) {\n    return item.cartId === action.cartId;\n  });\n  var cartItemIndex = cartItem && state.indexOf(cartItem);\n  switch (action.type) {\n    case CART.ADD_TO_CART:\n      if (!action.product.variation || action.product.variation.length === 0) {\n        var addedCartItem = state.find(function (item) {\n          return item.id === action.product.id;\n        });\n        var addedCartItemIndex = addedCartItem && state.indexOf(addedCartItem);\n        if (!addedCartItem) {\n          return [].concat(_toConsumableArray(state), [_objectSpread(_objectSpread({}, action.product), {}, {\n            cartQuantity: action.quantity || 1,\n            cartId: uuidv4()\n          })]);\n        } else {\n          return [].concat(_toConsumableArray(state.slice(0, addedCartItemIndex)), [_objectSpread(_objectSpread({}, addedCartItem), {}, {\n            cartQuantity: action.quantity ? addedCartItem.cartQuantity + action.quantity : addedCartItem.cartQuantity + 1\n          })], _toConsumableArray(state.slice(addedCartItemIndex + 1)));\n        }\n      } else {\n        if (!action.color || action.color === \"\") {\n          var _addedCartItem = state.find(function (item) {\n            return item.id === action.product.id;\n          });\n          var _addedCartItemIndex = _addedCartItem && state.indexOf(_addedCartItem);\n          if (!_addedCartItem) {\n            return [].concat(_toConsumableArray(state), [_objectSpread(_objectSpread({}, action.product), {}, {\n              cartQuantity: action.quantity || 1,\n              cartId: uuidv4()\n            })]);\n          } else {\n            return [].concat(_toConsumableArray(state.slice(0, _addedCartItemIndex)), [_objectSpread(_objectSpread({}, _addedCartItem), {}, {\n              cartQuantity: action.quantity ? _addedCartItem.cartQuantity + action.quantity : _addedCartItem.cartQuantity + 1\n            })], _toConsumableArray(state.slice(_addedCartItemIndex + 1)));\n          }\n        } else {\n          var _addedCartItem2 = state.find(function (item) {\n            return item.id === action.product.id && item.selectedColor && item.selectedColor === action.color;\n          });\n          var _addedCartItemIndex2 = _addedCartItem2 && state.indexOf(_addedCartItem2);\n          if (!_addedCartItem2) {\n            return [].concat(_toConsumableArray(state), [_objectSpread(_objectSpread({}, action.product), {}, {\n              cartQuantity: action.quantity || 1,\n              selectedColor: action.color,\n              cartId: uuidv4()\n            })]);\n          } else {\n            return [].concat(_toConsumableArray(state.slice(0, _addedCartItemIndex2)), [_objectSpread(_objectSpread({}, _addedCartItem2), {}, {\n              cartQuantity: action.quantity ? _addedCartItem2.cartQuantity + action.quantity : _addedCartItem2.cartQuantity + 1\n            })], _toConsumableArray(state.slice(_addedCartItemIndex2 + 1)));\n          }\n        }\n      }\n    case CART.REMOVE_FROM_CART:\n      return [].concat(_toConsumableArray(state.slice(0, cartItemIndex)), _toConsumableArray(state.slice(cartItemIndex + 1)));\n    case CART.REMOVE_ALL_FROM_CART:\n      return [];\n    case CART.INCREASE_QUANTITY_CART:\n      return [].concat(_toConsumableArray(state.slice(0, cartItemIndex)), [_objectSpread(_objectSpread({}, cartItem), {}, {\n        cartQuantity: cartItem.cartQuantity + 1\n      })], _toConsumableArray(state.slice(cartItemIndex + 1)));\n    case CART.DECREASE_QUANTITY_CART:\n      if (cartItem.cartQuantity < 2) {\n        return;\n      }\n      return [].concat(_toConsumableArray(state.slice(0, cartItemIndex)), [_objectSpread(_objectSpread({}, cartItem), {}, {\n        cartQuantity: cartItem.cartQuantity - 1\n      })], _toConsumableArray(state.slice(cartItemIndex + 1)));\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}