{"ast":null,"code":"//get product\nexport var getProducts = function getProducts(products, category, type, limit) {\n  category = category && category.toLowerCase() === \"all\" ? \"\" : category;\n  var finalProducts = category ? products.filter(function (product) {\n    return product.category.toLowerCase() === category.toLowerCase();\n  }) : products;\n  if (type && type === \"new\") {\n    var newProducts = finalProducts.filter(function (product) {\n      return product[\"new\"];\n    });\n    return newProducts.slice(0, limit ? limit : newProducts.length);\n  } else {\n    return finalProducts && finalProducts.slice(0, limit ? limit : finalProducts.length);\n  }\n};\n\n//get product by slug\nexport var getProductBySlug = function getProductBySlug(products, slug) {\n  return slug ? products.find(function (product) {\n    return product.slug.toLowerCase() === slug.toLowerCase();\n  }) : null;\n};\n\n//sort product\nexport var getProductBySort = function getProductBySort(products, type, limit) {\n  function sortWithCondition(arr, value) {\n    var reverse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var num = reverse ? -1 : 1;\n    return products.slice(0, limit ? limit : products.length).sort(function (a, b) {\n      if (a[value] < b[value]) {\n        return -1 * num;\n      }\n      if (a[value] > b[value]) {\n        return 1 * num;\n      }\n      return 0;\n    });\n  }\n  if (!type || type === \"default\") {\n    return products;\n  } else if (type === \"az\") {\n    return sortWithCondition(products, \"name\");\n  } else if (type === \"za\") {\n    return sortWithCondition(products, \"name\", true);\n  } else if (type === \"lowToHigh\") {\n    return sortWithCondition(products, \"price\");\n  } else if (type === \"highToLow\") {\n    return sortWithCondition(products, \"price\", true);\n  } else {\n    return products.slice(0, limit ? limit : products.length);\n  }\n};\n\n//get product by price\nexport var getProductByPrice = function getProductByPrice(products, from, to, limit) {\n  if (from && !to) {\n    return products.filter(function (p) {\n      return p.price > from;\n    });\n  } else if (!from && to) {\n    return products.filter(function (p) {\n      return p.price < to;\n    });\n  } else if (!from && !to) {\n    return products;\n  } else {\n    return products.filter(function (p) {\n      return p.price > from && p.price < to;\n    });\n  }\n};\n\n//get product by brand\nexport var getProductByBrand = function getProductByBrand(products, brand) {\n  return brand ? products.filter(function (p) {\n    return p.brand.toLowerCase() === brand.toLowerCase();\n  }) : products;\n};\n\n//get product by filter\nexport var getProductbyFilter = function getProductbyFilter(products, sortType, category, from, to, brand, limit) {\n  var sortedProduct;\n  if (category) {\n    var productCategory = getProducts(products, category);\n    if (to && !brand) {\n      var productPrice = getProductByPrice(productCategory, from, to);\n      sortedProduct = getProductBySort(productPrice, sortType);\n    } else if (!to && brand) {\n      var productBrand = getProductByBrand(productCategory, brand);\n      sortedProduct = getProductBySort(productBrand, sortType);\n    } else if (to && brand) {\n      var _productBrand = getProductByBrand(productCategory, brand);\n      var _productPrice = getProductByPrice(productCategory, from, to);\n      var commonProducts = _productBrand.filter(function (o1) {\n        return _productPrice.some(function (o2) {\n          return o1.id === o2.id;\n        });\n      });\n      sortedProduct = getProductBySort(commonProducts, sortType);\n    } else {\n      sortedProduct = getProductBySort(productCategory, sortType);\n    }\n  } else {\n    sortedProduct = getProductBySort(products, sortType);\n  }\n  return sortedProduct.slice(0, limit || products.length);\n};","map":{"version":3,"names":["getProducts","products","category","type","limit","toLowerCase","finalProducts","filter","product","newProducts","slice","length","getProductBySlug","slug","find","getProductBySort","sortWithCondition","arr","value","reverse","arguments","undefined","num","sort","a","b","getProductByPrice","from","to","p","price","getProductByBrand","brand","getProductbyFilter","sortType","sortedProduct","productCategory","productPrice","productBrand","commonProducts","o1","some","o2","id"],"sources":["/home/rlsxsuredials/Downloads/Test/CCosmetic-master/frontend/src/common/productSelect.js"],"sourcesContent":["//get product\r\nexport const getProducts = (products, category, type, limit) => {\r\n  category = category && category.toLowerCase() === \"all\" ? \"\" : category;\r\n  const finalProducts = category\r\n    ? products.filter(\r\n        (product) => product.category.toLowerCase() === category.toLowerCase()\r\n      )\r\n    : products;\r\n  if (type && type === \"new\") {\r\n    const newProducts = finalProducts.filter((product) => product.new);\r\n    return newProducts.slice(0, limit ? limit : newProducts.length);\r\n  } else {\r\n    return (\r\n      finalProducts &&\r\n      finalProducts.slice(0, limit ? limit : finalProducts.length)\r\n    );\r\n  }\r\n};\r\n\r\n//get product by slug\r\nexport const getProductBySlug = (products, slug) => {\r\n  return slug\r\n    ? products.find(\r\n        (product) => product.slug.toLowerCase() === slug.toLowerCase()\r\n      )\r\n    : null;\r\n};\r\n\r\n//sort product\r\nexport const getProductBySort = (products, type, limit) => {\r\n  function sortWithCondition(arr, value, reverse = false) {\r\n    let num = reverse ? -1 : 1;\r\n    return products.slice(0, limit ? limit : products.length).sort((a, b) => {\r\n      if (a[value] < b[value]) {\r\n        return -1 * num;\r\n      }\r\n      if (a[value] > b[value]) {\r\n        return 1 * num;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n  if (!type || type === \"default\") {\r\n    return products;\r\n  } else if (type === \"az\") {\r\n    return sortWithCondition(products, \"name\");\r\n  } else if (type === \"za\") {\r\n    return sortWithCondition(products, \"name\", true);\r\n  } else if (type === \"lowToHigh\") {\r\n    return sortWithCondition(products, \"price\");\r\n  } else if (type === \"highToLow\") {\r\n    return sortWithCondition(products, \"price\", true);\r\n  } else {\r\n    return products.slice(0, limit ? limit : products.length);\r\n  }\r\n};\r\n\r\n//get product by price\r\nexport const getProductByPrice = (products, from, to, limit) => {\r\n  if (from && !to) {\r\n    return products.filter((p) => p.price > from);\r\n  } else if (!from && to) {\r\n    return products.filter((p) => p.price < to);\r\n  } else if (!from && !to) {\r\n    return products;\r\n  } else {\r\n    return products.filter((p) => p.price > from && p.price < to);\r\n  }\r\n};\r\n\r\n//get product by brand\r\nexport const getProductByBrand = (products, brand) => {\r\n  return brand\r\n    ? products.filter((p) => p.brand.toLowerCase() === brand.toLowerCase())\r\n    : products;\r\n};\r\n\r\n//get product by filter\r\nexport const getProductbyFilter = (\r\n  products,\r\n  sortType,\r\n  category,\r\n  from,\r\n  to,\r\n  brand,\r\n  limit\r\n) => {\r\n  let sortedProduct;\r\n  if (category) {\r\n    let productCategory = getProducts(products, category);\r\n    if (to && !brand) {\r\n      let productPrice = getProductByPrice(productCategory, from, to);\r\n      sortedProduct = getProductBySort(productPrice, sortType);\r\n    } else if (!to && brand) {\r\n      let productBrand = getProductByBrand(productCategory, brand);\r\n      sortedProduct = getProductBySort(productBrand, sortType);\r\n    } else if (to && brand) {\r\n      let productBrand = getProductByBrand(productCategory, brand);\r\n      let productPrice = getProductByPrice(productCategory, from, to);\r\n      let commonProducts = productBrand.filter((o1) =>\r\n        productPrice.some((o2) => o1.id === o2.id)\r\n      );\r\n      sortedProduct = getProductBySort(commonProducts, sortType);\r\n    } else {\r\n      sortedProduct = getProductBySort(productCategory, sortType);\r\n    }\r\n  } else {\r\n    sortedProduct = getProductBySort(products, sortType);\r\n  }\r\n  return sortedProduct.slice(0, limit || products.length);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}