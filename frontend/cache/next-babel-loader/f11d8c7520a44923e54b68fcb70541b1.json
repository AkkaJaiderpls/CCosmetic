{"ast":null,"code":"var _jsxFileName = \"/home/rlsxsuredials/Desktop/Development/CCosmetic/src/pages/other/services.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport LayoutFour from \"../../components/Layout/LayoutFour\";\nimport { Breadcrumb, BreadcrumbItem } from \"../../components/Other/Breadcrumb\";\nimport CTAOne from \"../../components/Sections/CallToAction/CTAOne\";\nimport ServiceItem from \"../../components/Pages/Services/ServiceItem\";\nimport { formatSingleNumber } from \"../../common/utils\";\nimport servicesData from \"../../data/pages/services.json\";\nexport default function services() {\n  const {\n    0: serviceData,\n    1: setServiceData\n  } = useState([]);\n  useEffect(() => {\n    async function fetchServiceData() {\n      try {\n        const response = await fetch('http://localhost:8090/api/collections/services/records');\n        const data = await response.json();\n        const formattedData = data.items.map(item => ({\n          title: item.name,\n          description: item.description,\n          bigImgSrc: `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.image_370x490}`,\n          smallImgSrc: `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.image_300x300}`\n        }));\n        setServiceData(formattedData);\n      } catch (error) {\n        console.error('Error fetching service data:', error);\n      }\n    }\n    fetchServiceData();\n  }, []);\n  return __jsx(LayoutFour, {\n    title: \"Services\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Breadcrumb, {\n    title: \"SERVICIOS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(BreadcrumbItem, {\n    name: \"INICIO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(BreadcrumbItem, {\n    name: \"SERVICIOS\",\n    current: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), servicesData && servicesData.map((item, index) => __jsx(ServiceItem, {\n    key: index,\n    bigImgSrc: process.env.PUBLIC_URL + item.bigImgSrc,\n    smallImgSrc: process.env.PUBLIC_URL + item.smallImgSrc,\n    title: item.title,\n    order: formatSingleNumber(index + 1),\n    reverse: index % 2 === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), __jsx(CTAOne, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useEffect","LayoutFour","Breadcrumb","BreadcrumbItem","CTAOne","ServiceItem","formatSingleNumber","servicesData","services","serviceData","setServiceData","fetchServiceData","response","fetch","data","json","formattedData","items","map","item","title","name","description","bigImgSrc","collectionId","id","image_370x490","smallImgSrc","image_300x300","error","console","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","current","index","key","process","env","PUBLIC_URL","order","reverse"],"sources":["/home/rlsxsuredials/Desktop/Development/CCosmetic/src/pages/other/services.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LayoutFour from \"../../components/Layout/LayoutFour\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"../../components/Other/Breadcrumb\";\r\nimport CTAOne from \"../../components/Sections/CallToAction/CTAOne\";\r\nimport ServiceItem from \"../../components/Pages/Services/ServiceItem\";\r\nimport { formatSingleNumber } from \"../../common/utils\";\r\nimport servicesData from \"../../data/pages/services.json\";\r\n\r\nexport default function services() {\r\n  const [serviceData, setServiceData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchServiceData() {\r\n      try {\r\n        const response = await fetch('http://localhost:8090/api/collections/services/records');\r\n        const data = await response.json();\r\n        const formattedData = data.items.map((item) => ({\r\n          title: item.name,\r\n          description: item.description,\r\n          bigImgSrc: `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.image_370x490}`,\r\n          smallImgSrc: `http://localhost:8090/api/files/${item.collectionId}/${item.id}/${item.image_300x300}`\r\n        }));\r\n        setServiceData(formattedData);\r\n      } catch (error) {\r\n        console.error('Error fetching service data:', error);\r\n      }\r\n    }\r\n\r\n    fetchServiceData();\r\n  }, []);\r\n  return (\r\n    <LayoutFour title=\"Services\">\r\n      <Breadcrumb title=\"SERVICIOS\">\r\n        <BreadcrumbItem name=\"INICIO\" />\r\n        <BreadcrumbItem name=\"SERVICIOS\" current />\r\n      </Breadcrumb>\r\n      {servicesData &&\r\n        servicesData.map((item, index) => (\r\n          <ServiceItem\r\n            key={index}\r\n            bigImgSrc={process.env.PUBLIC_URL + item.bigImgSrc}\r\n            smallImgSrc={process.env.PUBLIC_URL + item.smallImgSrc}\r\n            title={item.title}\r\n            order={formatSingleNumber(index + 1)}\r\n            reverse={index % 2 === 1}\r\n          />\r\n        ))}\r\n\r\n      <CTAOne />\r\n    </LayoutFour>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}